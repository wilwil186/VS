SumaXi <- data.frame(Suma)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
set.seed(42) # Semilla
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito", col="lightblue", border="black")
abline(v = tasa_exito_poblacion, col="red", lwd=2)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito", col="lightblue", border="black")
abline(v = Frecuencia, col="red", lwd=2)
Frecuencia
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito", col="lightblue", border="black")
abline(v = Frecuencia, col="red", lwd=2)
Frecuencia
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)), add = TRUE, col = "red", lwd = 2)
curve(dnorm(x, mean = 0.5, sd = 0.0025, add = TRUE, col = "red", lwd = 2)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
n <- 100 # Muestra
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
n <- 100 # Muestra
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito", col="lightblue", border="black")
abline(v = Frecuencia, col="red", lwd=2)
curve(dnorm(x, mean = 0.5, sd = 0.0025), add = TRUE, col = "red", lwd = 2)
curve(dnorm(x, mean = 0.5, sd = 0.0025), add = TRUE, col = "blue", lwd = 2)
# 6. Aproximación de la Binomial por la Normal
valor_z <- (estimador_muestra - p) / sqrt((p * (1 - p)) / n)
(p * (1 - p)) / n
cat("Valor Z:", valor_z, "\n")
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
set.seed(42)
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito", col="lightblue", border="black")
abline(v = Frecuencia, col="red", lwd=2)
curve(dnorm(x, mean = 0.5, sd = 0.0025), add = TRUE, col = "blue", lwd = 2)
# 6. Aproximación de la Binomial por la Normal
valor_z <- (estimador_muestra - p) / sqrt((p * (1 - p)) / n)
cat("Aproximación de la Binomial por la Normal:\n")
cat("Valor Z:", valor_z, "\n")
Frecuencia
source("~/VS/R/Análisis Estadístico en inferencia para investigación médica/Análisis_Estadístico_en_Inferencia_para _Investigación_Médica.R", echo=TRUE)
estimador_muestra <- Y / n
estimador_muestra
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito", col="lightblue", border="black")
abline(v = Frecuencia, col="red", lwd=2)
ajuste <- fitdistr(media, "norm")
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
table(SumaXi)
SumaXi
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE, prob=TRUE)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
set.seed(42)
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
set.seed(42)
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 10000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
set.seed(42)
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 100000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = Frecuencia, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
curve(dnorm(x, mean = 0.5, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
set.seed(42)
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 1000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = 0.5, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
# Simulación en R para Análisis Estadístico en Inferencia para Investigación Médica
# Muestra
set.seed(42)
n <- 100 # Muestra
p <- 0.5 # Estimación
Datos <- rbinom(n, 1, p) # Distribución Bernoulli
Datos
table(Datos)
Frecuencia <- mean(Datos)
Frecuencia
Y <- sum(Datos) # Y es el exito de la muestra (Cantidad de 1 en la distribución de bernoulli)
estimador_muestra <- Y / n
cat("Estimador de la proporción de éxito:", estimador_muestra)
# 5. Distribución del Estimador
m <- 10000 # número de simulaciones
datos <- matrix(nrow = m, ncol = n)
for (i in 1:m) {
datos[i,] <- rbinom(n, 1, p)
}
datos <- data.frame(datos) # DataFrame con 1000 obs, y 100 muestras.
SumaXi <- apply(datos,1,sum)
SumaXi <- data.frame(SumaXi)
media <- apply(datos, 1, mean)
SumaXi <- cbind(SumaXi, media)
head(SumaXi)
cat("Distribución del Estimador:\n")
hist(media, main="Distribución del Estimador", xlab="Proporción de Éxito",
col="lightblue", border="black",prob=TRUE)
abline(v = Frecuencia, col="red", lwd=2)
# Ajustar una curva a la distribución del estimador
curve(dnorm(x, mean = 0.5, sd = sqrt(p * (1 - p) / n)),
col = "blue", lwd = 2, add = TRUE)
dnorm(1)
?dnorm
pnorm(1)
qnorm(1)
rnorm(1)
1-rnorm(1)
prob <- 1 - pnorm(1)
prob
# Función para calcular la verosimilitud
verosimilitud <- function(p, x) {
prod(dbinom(x, n, p))
}
# Datos de ejemplo
x <- c(55, 56, 57, 58, 59)
n <- length(x)
# Maximizar la verosimilitud
estimador_mle <- optim(verosimilitud, p = 0.5, data = list(x = x))$par
# Función para calcular la verosimilitud
verosimilitud <- function(p, x) {
prod(dbinom(x, length(x), p))
}
# Datos de ejemplo
x <- c(55, 56, 57, 58, 59)
# Maximizar la verosimilitud
estimador_mle <- optim(par = 0.5, fn = verosimilitud, x = x, method = "Brent", lower = 0, upper = 1)$par
cat("Estimador MLE:", estimador_mle, "\n")
# Calcular la media de la muestra
media_muestra <- mean(x)
cat("Media de la muestra:", media_muestra, "\n")
# Parámetros del problema
n <- 100
p <- 0.5
proporcion_objetivo <- 0.55
# 1. Descripción de la Población
media_poblacional <- n * p
varianza_poblacional <- n * p * (1 - p)
# 2. Identificación del Estimador Apropiado
estimador_proporcion <- function(muestra) {
return(mean(muestra))
}
# 3. Demostración de Características del Estimador
set.seed(123)  # Para reproducibilidad
muestra <- rbinom(n, 1, p)
media_muestral <- estimador_proporcion(muestra)
varianza_muestral <- var(muestra) / n
# 4. Distribución del Estimador
media_distribucion_estimador <- p
varianza_distribucion_estimador <- p * (1 - p) / n
# 5. Aproximación de la Binomial por la Normal
z_score <- (proporcion_objetivo - media_distribucion_estimador) / sqrt(varianza_distribucion_estimador)
probabilidad_aproximada <- pnorm(z_score, lower.tail = FALSE)
# Resultados
cat("1. Descripción de la Población:\n")
cat("Media poblacional:", media_poblacional, "\n")
cat("Varianza poblacional:", varianza_poblacional, "\n\n")
cat("2. Demostración de Características del Estimador:\n")
cat("Media muestral:", media_muestral, "\n")
cat("Varianza muestral:", varianza_muestral, "\n\n")
cat("3. Distribución del Estimador:\n")
cat("Media distribución estimador:", media_distribucion_estimador, "\n")
cat("Varianza distribución estimador:", varianza_distribucion_estimador, "\n\n")
cat("4. Aproximación de la Binomial por la Normal:\n")
cat("Probabilidad aproximada:", probabilidad_aproximada, "\n")
# Parámetros del problema
n <- 100
p <- 0.5
# Función para obtener el estimador de la proporción
estimador_proporcion <- function(muestra) {
return(mean(muestra))
}
# Generar muestras y calcular estimadores
set.seed(123)  # Para reproducibilidad
num_muestras <- 1000
muestras <- matrix(rbinom(num_muestras * n, 1, p), nrow = num_muestras)
estimadores <- apply(muestras, 1, estimador_proporcion)
# Crear histograma
hist(estimadores, main = "Distribución del Estimador de Proporción",
xlab = "Estimador de Proporción", ylab = "Frecuencia", col = "lightblue", border = "black")
# Agregar curva de densidad
densidad_estimadores <- density(estimadores)
lines(densidad_estimadores, col = "red", lwd = 2)
# Parámetros del problema
n <- 100
p <- 0.5
proporcion_objetivo <- 0.55
# 1. Descripción de la Población
media_poblacional <- n * p
varianza_poblacional <- n * p * (1 - p)
# 2. Identificación del Estimador Apropiado
estimador_proporcion <- function(muestra) {
return(mean(muestra))
}
# 3. Demostración de Características del Estimador
set.seed(123)  # Para reproducibilidad
muestra <- rbinom(n, 1, p)
media_muestral <- estimador_proporcion(muestra)
varianza_muestral <- var(muestra) / n
# 4. Distribución del Estimador
media_distribucion_estimador <- p
varianza_distribucion_estimador <- p * (1 - p) / n
# 5. Aproximación de la Binomial por la Normal
z_score <- (proporcion_objetivo - media_distribucion_estimador) / sqrt(varianza_distribucion_estimador)
probabilidad_aproximada <- pnorm(z_score, lower.tail = FALSE)
# Resultados
cat("1. Descripción de la Población:\n")
cat("Media poblacional:", media_poblacional, "\n")
cat("Varianza poblacional:", varianza_poblacional, "\n\n")
cat("2. Demostración de Características del Estimador:\n")
cat("Media muestral:", media_muestral, "\n")
cat("Varianza muestral:", varianza_muestral, "\n\n")
cat("3. Distribución del Estimador:\n")
cat("Media distribución estimador:", media_distribucion_estimador, "\n")
cat("Varianza distribución estimador:", varianza_distribucion_estimador, "\n\n")
cat("4. Aproximación de la Binomial por la Normal:\n")
cat("Probabilidad aproximada:", probabilidad_aproximada, "\n")
# Parámetros del problema
n <- 100
p <- 0.5
# Función para obtener el estimador de la proporción
estimador_proporcion <- function(muestra) {
return(mean(muestra))
}
# Generar muestras y calcular estimadores
set.seed(123)  # Para reproducibilidad
num_muestras <- 1000
muestras <- matrix(rbinom(num_muestras * n, 1, p), nrow = num_muestras)
estimadores <- apply(muestras, 1, estimador_proporcion)
# Crear histograma
hist(estimadores, main = "Distribución del Estimador de Proporción",
xlab = "Estimador de Proporción", ylab = "Frecuencia", col = "lightblue", border = "black",prob=TRUE)
# Agregar curva de densidad
densidad_estimadores <- density(estimadores)
lines(densidad_estimadores, col = "red", lwd = 2)
